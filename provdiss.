** JSX javascript och xml 

<>  

<h1> </h1>
<Card/>

5+5 

{5+5}

{/* */}
</>
var Home = <div>  <h1> </h1>      </div>  



// en lista av object 

    //  map , foreach 
    // map -> en list av data till list of elements 

Exemple i  browser konsolen: 
 const lista = [ 1, 2, 3 , 4, 5]
undefined
lista.map( (e)=>{ console.log(e) }  )
VM367:1 1
VM367:1 2
VM367:1 3
VM367:1 4
VM367:1 5
(5) [undefined, undefined, undefined, undefined, undefined]0: undefined1: undefined2: undefined3: undefined4: undefinedlength: 5__proto__: Array(0)


lista.forEach( (e)=>{ console.log(e) }  )
VM482:1 1
VM482:1 2
VM482:1 3
VM482:1 4
VM482:1 5
undefined

keys i map:-
  * keys i map/loop ska vara unika 
  * Create , Read , Update, Delete


** State:- 
   hur ändrar man state i react functional component? 

  1. deklarerar en state. 
  const [state, setState] = useState("");
   
   2. vi ändrar state 
   setState("nytt värde")
   
   3. visar state 
   {state}


**props:- 
ett sätt passera data från parent till child element
props ska inte ändras direct. 

**Child props. 

<Home> 
    <Nav>
</Home>

Inuti Home component måste vi lägga till 
    {props.children}


** {   expression ? <div> profile </div>: <div> Login </div>}

{isLoggedIn ?  <div> profile </div>: <div> Login </div>}


{user.status==="Admin" ?  <div> Admin profile </div>: <div> vanlig profile </div>}

{isLoggedIn &&  <div> profile </div>}


=============

console.log(e.target.elements.email.value)
console.log(e.target.elements.password.value)


==============

Ändrar du state renderas jsx igen/component igen. 


==============

Kl. 11.00 

// module is not found 
    npm i modulenamn


module is not defined , Component is not defined 

 import Component/module from "..."


==============



{/*   */}